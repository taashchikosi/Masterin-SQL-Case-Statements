-- 1. change M to Male & F to Female in the employee tableselect  emp_no, first_name, last_name,  (case    when gender = 'M' then 'Male'    else 'Female'  end) as emp_gender  from    future-data-analyst-290597.Portfolio_Projects.employees  Order by    emp_no;-- 2. Creating a column named age_category to idnetify different age bracketsselect  age,  (case    when age < 30 then 'Young'    when age > 60 then 'Old'    else 'Middle Aged'  end) as age_categoryfrom  future-data-analyst-290597.Portfolio_Projects.customers;-- 3.retrieve list of employees that were employed before 1990, between 1990 & 1995, & after 1995 select  emp_no, hire_date, extract(year from hire_date) as year,  (case    when extract(year from hire_date) < 1990 then 'employed before 1990'    when extract(year from hire_date) >= 1990 and extract(year from hire_date) <= 1995 then 'employed between 1990 & 1995'    else 'employed after 1995'  end) as emp_date  from    future-data-analyst-290597.Portfolio_Projects.employees  order by    emp_no;-- 4.retrieve list of average salary of employees. if avg salary is > 80k, return paid well, if < 80k return underpaid, otherwise return unpaidselect  emp_no, round(avg(salary), 2) as avg_salary,  (case    when avg(salary) > 80000 then 'well paid'    when avg(salary) < 80000 then 'underpaid'     else 'unpaid'  end) as salary_category  from    future-data-analyst-290597.Portfolio_Projects.salariesgroup by    emp_no;-- 5. count the # of employees in each salary categoryselect   a.salary_category, count(*) as number_of_employeesfrom  (select    emp_no, round(avg(salary), 2) as avg_salary,    (case      when avg(salary) > 80000 then 'well paid'      when avg(salary) < 80000 then 'underpaid'       else 'unpaid'    end) as salary_category  from    future-data-analyst-290597.Portfolio_Projects.salaries  group by    emp_no) as agroup by  a.salary_category;